# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

name: ESHOPONWEB-CICD2
trigger:
- master

resources:
 repositories:
   - repository: self
     trigger: none

stages:
  - stage: build
    displayName: build
    jobs:
      - job: build
        pool:
          vmimage: ubuntu-latest
        steps:
        - task: DotNetCoreCLI@2
          displayName: restore
          inputs:
           command: 'restore'
           projects: '**/*.sln'
           feedstouse: 'select'

        - task: DotNetCoreCLI@2
          displayName: build
          inputs:
           command: 'build'
           projects: '**/*.sln'

        - task: DotNetCoreCLI@2
          displayName: unit-test
          inputs:
            command: 'test'
            projects: 'tests/unittests/*.csproj'
        - task: DotNetCoreCLI@2
          displayName: publish
          inputs:
           command: 'publish'
           publishWebProjects: true
           arguments: '-o $(Build.Artifactstagingdirectory)'
        - task: PublishBuildArtifacts@1
          displayName: publish artifacts
          inputs:
            PathtoPublish: '$(Build.Artifactstagingdirectory)'
            ArtifactName: retailapp

  - stage: Deployment
    displayName: Dev-Env
    jobs:
      - job: Deploy
        pool:
          vmImage: 'windows-latest'
        steps:
          - task: DownloadBuildArtifacts@1
            inputs:
              buildType: 'current'
              downloadType: 'single'
              artifactName: 'retailapp'
              downloadPath: '$(Build.Artifactstagingdirectory)'
          - task: AzureRmWebAppDeployment@4
            inputs:
              ConnectionType: AzureRM
              azureSubscription: 'eshoponweb'
              appType: webApp
              WebAppName: 'prkwebapp2'
              packageForLinux: '$(Build.Artifactstagingdirectory)/**/web.zip'



  - stage: Deployment_SIT1
    displayName: SIT1-Env
    dependsOn: Deployment
    jobs:
    - deployment: Deploy
      environment: QA-Env
      pool:
        vmImage: 'windows-latest'
      strategy:
       runOnce:
         deploy:
          steps:
          - task: DownloadBuildArtifacts@1
            inputs:
              buildType: 'current'
              downloadType: 'single'
              artifactName: 'retailapp'
              downloadPath: '$(Build.Artifactstagingdirectory)'
          - task: AzureRmWebAppDeployment@4
            inputs:
              ConnectionType: AzureRM
              azureSubscription: 'eshoponweb'
              appType: webApp
              WebAppName: 'prkwebapp2'
              packageForLinux: '$(Build.Artifactstagingdirectory)/**/web.zip'

  - stage: Deployment_SIT2
    displayName: SIT2-Env
    dependsOn: Deployment
    jobs:
    - deployment: Deploy
      environment: QA-Env
      pool:
        vmImage: 'windows-latest'
      strategy:
       runOnce:
         deploy:
          steps:
          - task: DownloadBuildArtifacts@1
            inputs:
              buildType: 'current'
              downloadType: 'single'
              artifactName: 'retailapp'
              downloadPath: '$(Build.Artifactstagingdirectory)'
          - task: AzureRmWebAppDeployment@4
            inputs:
              ConnectionType: AzureRM
              azureSubscription: 'eshoponweb'
              appType: webApp
              WebAppName: 'prkwebapp2'
              packageForLinux: '$(Build.Artifactstagingdirectory)/**/web.zip'